/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.hubedition.databaseabstractionlayer.adoadapters;

import java.sql.Connection;
import java.sql.SQLException;

public final class ConnectionUtils {
	private static final String DEBUG_PROPERTY_KEY = "OjdbcPoolDebug";

	private static boolean isDebug = Boolean.valueOf(System.getProperty(DEBUG_PROPERTY_KEY, "false"));
	
	private static void printDebugStackTrace() {
		if (isDebug) {
			StackTraceElement[] trace = Thread.currentThread().getStackTrace();
			for (StackTraceElement ste: trace) {
				System.err.println(ste.toString());
			}
		}
	}
	
	private static void logDebug(String message) {
		if (isDebug) {
			System.err.println(message);
		}
	}
	
	public static void closeConnection(Connection conn) throws SQLException {
        try {
            // If the connection isn't in auto commit mode, then rollback the current transaction now...
            if (!conn.isClosed() && !conn.getAutoCommit()) {
                conn.rollback();
            }
            
            TemporarySpaceObject.cleanAllTemporaryObjectsForConnection(conn);
        } finally {
        	logDebug("[CLOSE_CONNECTION] Closed connection: " + conn.hashCode() + " (timestamp: " + System.currentTimeMillis() + ")");
            conn.close();
        }
    }
    
    public static ConnectionState getConnectionState(Connection connection) throws SQLException {
        return connection.isClosed()? ConnectionState.Closed: ConnectionState.Open;
    }
    
    public static boolean debugConnections() {
    	return isDebug;
    }
    
    public static void logOpenConnection(Connection conn) {
    	if (isDebug) {
			logDebug("[GET_CONNECTION] GOT CONNECTION: " + conn.hashCode() + " (timestamp: " +  System.currentTimeMillis() + ")");
			printDebugStackTrace();
		}
    }
}
