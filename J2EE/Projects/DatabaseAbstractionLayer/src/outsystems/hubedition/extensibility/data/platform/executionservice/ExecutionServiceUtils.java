/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.hubedition.extensibility.data.platform.executionservice;

import java.sql.SQLException;

import outsystems.hubedition.databaseabstractionlayer.adoadapters.ADOCommand;
import outsystems.hubedition.databaseabstractionlayer.adoadapters.ADOCommandType;
import outsystems.hubedition.databaseabstractionlayer.adoadapters.ADOParameter;
import outsystems.hubedition.databaseabstractionlayer.adoadapters.ADOParameterDirection;
import outsystems.hubedition.util.OSResultSet;
import outsystems.hubedition.util.StringUtils;

public class ExecutionServiceUtils {
    public static OSResultSet executeStoredProcedureWithResultSet(IPlatformExecutionService platformExecutionService, ADOCommand cmd, 
            String readerParamName) throws SQLException {
        
        cmd.setCommandType(ADOCommandType.StoredProcedure);        
        
        if (!StringUtils.isNullOrEmpty(readerParamName)) {        
            ADOParameter readerParam = cmd.createParameter();
            String paramPrefix = platformExecutionService.getDatabaseServices().getExecutionService().getParameterPrefix();
            readerParam.setName(readerParamName.startsWith(paramPrefix)? readerParamName: paramPrefix + readerParamName);
            readerParam.setParameterAsResultSetParameter();
            platformExecutionService.setParameterDirection(readerParam, ADOParameterDirection.Output);
            cmd.addParameter(readerParam);
        }
            
        return cmd.executeStoredProcedure().get(0);
    }
}
