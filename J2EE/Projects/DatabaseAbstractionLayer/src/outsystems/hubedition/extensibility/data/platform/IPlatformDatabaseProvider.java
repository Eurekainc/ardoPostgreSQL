/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.hubedition.extensibility.data.platform;

import outsystems.hubedition.extensibility.data.*;
import outsystems.hubedition.extensibility.data.configurationservice.*;
import outsystems.hubedition.extensibility.data.platform.configuration.*;
import outsystems.hubedition.util.*;
import outsystems.hubedition.util.delegates.*;
import outsystems.runtimecommon.*;
import java.math.BigDecimal;
import outsystems.hubedition.extensibility.data.configurationservice.IRuntimeDatabaseConfiguration;
import outsystems.hubedition.extensibility.data.IDatabaseProvider;
import outsystems.hubedition.extensibility.data.platform.configuration.IPlatformConfigurationManager;
import outsystems.hubedition.extensibility.data.platform.configuration.IPlatformDatabaseConfiguration;
import outsystems.hubedition.extensibility.data.platform.configuration.ISessionConfigurationManager;
import outsystems.hubedition.extensibility.data.platform.configuration.ISessionDatabaseConfiguration;



/**
 *	Represents an instance that allows full usage of the database.
 */
public interface IPlatformDatabaseProvider extends IDatabaseProvider
{
    
    /**
	 *	Gets the IPlatformProviderProperties instance associated with this database provider.
	 */
    public IPlatformProviderProperties getProperties();
    
    /**
	 *	Creates a new Empty IRuntimeDatabaseConfiguration.
	 *	@return	An empty runtime database configuration.
	 */
    public IRuntimeDatabaseConfiguration createEmptyRuntimeDatabaseConfiguration();
    
    /**
	 *	Creates a new Empty IPlatformDatabaseConfiguration
	 *	@return	An empty platform database configuration.
	 */
    public IPlatformDatabaseConfiguration createEmptyPlatformDatabaseConfiguration();
    
    /**
	 *	Creates a new Empty ISessionDatabaseConfiguration
	 *	@return	An empty session database configuration.
	 */
    public ISessionDatabaseConfiguration createEmptySessionDatabaseConfiguration();
    
    /**
	 *	Creates a new PlatformConfigurationManager IPlatformConfigurationManager
	 *	@param	uiConfiguration	The UI configuration.
	 *	@return	A configuration manager.
	 */
    public IPlatformConfigurationManager getConfigurationManager(IPlatformDatabaseConfiguration uiConfiguration);
    
    /**
	 *	Creates a new SessionConfigurationManager ISessionConfigurationManager
	 *	@param	uiConfiguration	The UI configuration.
	 *	@param	platformConfiguration	The Platform configuration.
	 *	@return	A configuration manager.
	 */
    public ISessionConfigurationManager getConfigurationManager(ISessionDatabaseConfiguration uiConfiguration, IPlatformDatabaseConfiguration platformConfiguration);
    
    /**
	 *	Returns an instance of IPlatformDatabaseServices that uses the supplied configuration to access the database.
	 *	@param	databaseConfiguration	The database configuration.
	 *	@return	A platform database configuration.
	 */
    public IPlatformDatabaseServices getPlatformDatabaseServices(IRuntimeDatabaseConfiguration databaseConfiguration);
}
