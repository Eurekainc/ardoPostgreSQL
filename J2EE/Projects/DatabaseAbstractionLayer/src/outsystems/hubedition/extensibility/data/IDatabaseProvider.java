/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.hubedition.extensibility.data;

import java.text.*;
import java.util.*;
import outsystems.hubedition.extensibility.data.configurationservice.*;
import outsystems.hubedition.util.*;
import outsystems.hubedition.util.delegates.*;
import outsystems.runtimecommon.*;
import java.math.BigDecimal;
import outsystems.hubedition.extensibility.data.configurationservice.IIntegrationDatabaseConfiguration;
import outsystems.hubedition.extensibility.data.configurationservice.IRuntimeDatabaseConfiguration;
import outsystems.runtimecommon.DatabaseProviderKey;



/**
 *	Represents a database management system.
 */
public interface IDatabaseProvider extends IEquatable<IDatabaseProvider>
{
    
    /**
	 *	Returns a unique identifier of the database provider, used to identify it as a plugin
	 *	@return	A unique identifier of the provider.
	 */
    public DatabaseProviderKey getKey();
    
    /**
	 *	Gets the IProviderProperties instance associated with this database provider.
	 *	@return	The provider properties.
	 */
    public IProviderProperties getProperties();
    
    /**
	 *	Returns an empty IIntegrationDatabaseConfiguration.
	 *	@return	An empty configuration.
	 */
    public IIntegrationDatabaseConfiguration createEmptyIntegrationDatabaseConfiguration();
    
    /**
	 *	Returns the services provided by the DBMS.
	 *	@param	databaseConfiguration	The database configuration.
	 *	@return	The Integration Database Service provided from DBMS.
	 */
    public IDatabaseServices getIntegrationDatabaseServices(IRuntimeDatabaseConfiguration databaseConfiguration);
    
    /**
	 *	Validates that the plugin provider is the same
	 *	@param	provider	The provider to compare with
	 */
    public boolean equals(Object provider);
}
