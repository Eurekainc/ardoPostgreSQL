/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.hubedition.extensibility.data.dmlservice;

import java.text.*;
import java.util.*;
import outsystems.hubedition.extensibility.data.*;
import outsystems.hubedition.util.*;
import outsystems.hubedition.util.delegates.*;
import java.math.BigDecimal;

/**
 *	This interface defines methods that help build DML Identifiers for columns, tables, and others.
 */
public interface IDMLIdentifiers
{
    
    /**
	 *	Gets the associated DML service.
	 *	@return	The DML service associated.
	 */
    public IDMLService getDMLService();
    
    /**
	 *	Gets the maximum length of a simple (not compound) identifier. This value should be the minimum valid length for any kind of identifier (e.g. table name, parameter name)
	 *	@return	The maximum length.
	 */
    public int getMaxLength();
    
    /**
	 *	Escapes a simple (not compound) identifier to prevent name clashing with reserved words.
	 *	@param	identifierName	Name that identifies a database object.
	 *	@return	An escaped identifier.
	 */
    public String escapeIdentifier(String identifierName);
    
    /**
	 *	Returns a name that can be used as a valid identifier (e.g. parameter name, constraint name). It should contain only valid characters and its length should not exceed the maximum defined in MaxLength.
	 *	@param	baseName	An identifier name.
	 *	@param	truncateUsingRandomDigits	Indicates if the identifier should be truncated if its length exceeds the MaxLength. In this case,  random digits should be used as a suffix to prevent name clashing.
	 *	@return	A string representing a valid identifier.
	 */
    public String getValidIdentifier(String baseName, boolean truncateUsingRandomDigits);
}
