/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.hubedition.extensibility.data;

import java.text.*;
import java.util.*;
import outsystems.hubedition.util.*;
import outsystems.hubedition.util.delegates.*;
import java.math.BigDecimal;


/**
 *	Base implementation of a class to represent a set of properties that are specific to a database provider.
 */
public abstract class BaseProviderProperties implements IProviderProperties {
    private IDatabaseProvider _databaseProvider;
    public static final TypeInformation<BaseProviderProperties> TypeInfo = TypeInformation.get(BaseProviderProperties.class);
    
    /**
	 *	Fills the database provider information.
	 *	@param	provider	The database provider.
	 */
    protected BaseProviderProperties(IDatabaseProvider provider){
        setDatabaseProvider( provider );
    }
    
    /**
	 *	This property represents the associated IDatabaseProvider instance.
	 */
    public IDatabaseProvider getDatabaseProvider()
    {
        return _databaseProvider;
    }
    
    /**
	 *	This property represents the associated IDatabaseProvider instance.
	 */
    private void setDatabaseProvider(IDatabaseProvider value)
    {
        _databaseProvider = value;
    }
    
    /**
	 *	Gets the friendly name of the database provider.
	 */
    public abstract String getDisplayName();
    
    /**
	 *	Gets the friendly name of the database provider, when used to run the OutSystems Platform.
	 */
    public String getPlatformDisplayName()
    {
        return getDisplayName();
    }
    
    /**
	 *	Gets the friendly name of the database container (e.g. database, catalog, schema, ...), used  for UI generation and messages displayed to the end-user. This implementation return &quot;Database&quot;
	 */
    public String getDatabaseContainerName()
    {
        return "database";
    }
    
    /**
	 *	Indicates if the provider&#39;s driver supports more than one active result set for a single connection. This implementation returns true.
	 */
    public boolean isSupportsMultipleActiveResultSets()
    {
        return true;
    }
}
