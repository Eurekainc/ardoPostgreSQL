/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.hubedition.extensibility.data.introspectionservice;

import java.text.*;
import java.util.*;
import outsystems.hubedition.extensibility.data.*;
import outsystems.hubedition.extensibility.data.databaseobjects.*;
import outsystems.hubedition.util.*;
import outsystems.hubedition.util.delegates.*;
import java.math.BigDecimal;
import outsystems.hubedition.extensibility.data.databaseobjects.IDatabaseInfo;


public class IntrospectionServiceExtensions {
    public static final TypeInformation<IntrospectionServiceExtensions> TypeInfo = TypeInformation.get(IntrospectionServiceExtensions.class);
    /**
	 *	Returns a list of table sources (e.g. tables, views) that belong to a given database. This extension method doesn't filter any table source.
	 *	@param	introspectionService	IIntrospectionService to use
	 *	@param	database	Database from which we want to fetch the list of tables
	 *	@return	List of available table sources in the given database
	 *	@throws	SQLException	if an error occurs while accessing the database
	 */
    public static Iterable<ITableSourceInfo> listTableSourcesWithoutFilter(IIntrospectionService introspectionService, IDatabaseInfo database) throws IntrospectionServiceException, java.sql.SQLException {
        return introspectionService.listTableSources(database, 
            new IsTableSourceToIgnore() {
                protected boolean executeImpl(String _) throws Exception
                {
                    return false;
                }
            });
    }
}
