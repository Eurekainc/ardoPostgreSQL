/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package outsystems.servertests.databaseprovider.framework;

import java.nio.*;
import java.nio.charset.*;
import java.text.*;
import java.util.*;
import linqbridge.linq.*;
import outsystems.hubedition.extensibility.data.*;
import outsystems.hubedition.extensibility.data.platform.*;
import outsystems.hubedition.util.*;
import outsystems.hubedition.util.delegates.*;
import java.math.BigDecimal;


public abstract class DatabaseProviderTest<C extends IDatabaseProviderTestConfiguration<IDatabaseProvider>> extends BaseDatabaseProviderTest1<IDatabaseProvider, C> implements IGenericObject {
    public DatabaseProviderTest(final TypeInformation<C> classTypeArg_C) {
        super(TypeInformation.get(IDatabaseProvider.class), classTypeArg_C);
        instanceInitDatabaseProviderTest(classTypeArg_C);
    }
    
    public TypeInformation<?> getTypeInformation() {
        return TypeInformation.<DatabaseProviderTest<C>>get(DatabaseProviderTest.class, classTypeArg_C);
    }
    
    private final void instanceInitDatabaseProviderTest(final TypeInformation<C> classTypeArg_C) {
        this.classTypeArg_C = classTypeArg_C;
    }
    protected static <C extends IDatabaseProviderTestConfiguration<IDatabaseProvider>> void staticInitDatabaseProviderTest(final TypeInformation<C> classTypeArg_C) {
        staticInitBaseDatabaseProviderTest1(TypeInformation.get(IDatabaseProvider.class), classTypeArg_C);
    }
    protected TypeInformation<C> classTypeArg_C;
}
