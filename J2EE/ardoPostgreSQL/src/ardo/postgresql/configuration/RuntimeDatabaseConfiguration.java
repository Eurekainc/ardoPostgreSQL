/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package ardo.postgresql.configuration;

import outsystems.hubedition.extensibility.data.IDatabaseProvider;
import outsystems.hubedition.extensibility.data.configurationservice.ConfigurationParameter;
import outsystems.hubedition.extensibility.data.configurationservice.IRuntimeDatabaseConfiguration;
import outsystems.hubedition.util.TypeInformation;

/**
 *	The configuration object used to create services and open connections to the database.  We have other configuration interfaces like   that are used to specify the UI of a configuration screen.
 */
public class RuntimeDatabaseConfiguration implements IRuntimeDatabaseConfiguration {
    private IDatabaseProvider _databaseProvider;
    private String _username;
    private String _connectionString;
    private String _databaseIdentifier;
    
    public static final TypeInformation<RuntimeDatabaseConfiguration> TypeInfo = TypeInformation.get(RuntimeDatabaseConfiguration.class);
    
    /**
	 *	Gets the database provider. It provides information about the database, and access to its services.
	 */
    public final IDatabaseProvider getDatabaseProvider() {
        return _databaseProvider;
    }
    
    /**
	 *	Gets the database provider. It provides information about the database, and access to its services.
	 */
    public final void setDatabaseProvider(IDatabaseProvider value) {
        _databaseProvider = value;
    }
    
    /**
	 *	The user that this configuration uses to connect to the database.
	 */
    @ConfigurationParameter
    public final String getUsername() {
        return _username;
    }
    
    /**
	 *	The user that this configuration uses to connect to the database.
	 */
    @ConfigurationParameter
    public final void setUsername(String value) {
        _username = value;
    }
    
    /**
	 *	Gets the connection string that allows connecting to a database.
	 */
    @ConfigurationParameter
    public final String getConnectionString() {
        return _connectionString;
    }
    
    /**
	 *	Gets the connection string that allows connecting to a database.
	 */
    @ConfigurationParameter
    public final void setConnectionString(String value) {
        _connectionString = value;
    }
    
    /**
	 *	Gets the database identifier to be used in the configuration.
	 *	@throws	UnsupportedOperationException	
	 */
    @ConfigurationParameter
    public final String getDatabaseIdentifier() {
        return _databaseIdentifier;
    }
    
    @ConfigurationParameter
    public final void setDatabaseIdentifier(String value) {
    	_databaseIdentifier = value;
    }
}
