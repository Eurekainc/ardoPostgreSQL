/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

package ardo.postgresql.introspection;

import java.sql.ResultSet;
import java.sql.SQLException;

import outsystems.hubedition.extensibility.data.DBDataType;
import outsystems.hubedition.extensibility.data.databaseobjects.BaseDataTypeInfo;
import outsystems.hubedition.extensibility.data.databaseobjects.IDataTypeInfo;
import outsystems.hubedition.extensibility.data.databaseobjects.ITableSourceColumnInfo;
import outsystems.hubedition.extensibility.data.databaseobjects.ITableSourceInfo;
import outsystems.hubedition.util.StringUtils;
import outsystems.hubedition.util.TypeInformation;

/**
 *	Contains information about a table source column.
 */
public class TableSourceColumnInfo implements ITableSourceColumnInfo {
    private ITableSourceInfo _tableSource;
    private String _name;
    private IDataTypeInfo _dataType;
    private boolean _isMandatory;
    private boolean _isPrimaryKey;
    private boolean _isAutoGenerated;
    public static final TypeInformation<TableSourceColumnInfo> TypeInfo = TypeInformation.get(TableSourceColumnInfo.class);
    
    /**
	 *	Initializes a new instance of the TableSourceColumnInfo class.
	 *	@param	tableSource	The table source.
	 *	@param	name	The name.
	 *	@param	dataType	Type of the data.
	 *	@param	isMandatory	if set to true [is mandatory].
	 *	@param	isPrimaryKey	if set to true [is primary key].
	 *	@param	isAutoGenerated	if set to true [is automatic generated].
	 */
    public TableSourceColumnInfo(ITableSourceInfo tableSource, String name, IDataTypeInfo dataType, boolean isMandatory, boolean isPrimaryKey, boolean isAutoGenerated){
        setTableSource( tableSource );
        setName( name );
        setDataType( dataType );
        setIsMandatory( isMandatory );
        setIsPrimaryKey( isPrimaryKey );
        setIsAutoGenerated( isAutoGenerated );
    }
    
    public static TableSourceColumnInfo create(ITableSourceInfo tableSource, ResultSet reader) throws SQLException {
    	String name = reader.getString("column_name");
    	boolean isMandatory = !StringUtils.isNullOrEmpty(reader.getString("is_nullable")) && "NO".equals(reader.getString("is_nullable").toUpperCase());
    	boolean isAutoGenerated = !StringUtils.isNullOrEmpty(reader.getString("column_default"))  && reader.getString("column_default").toLowerCase().trim().startsWith("nextval(");

    	IDataTypeInfo dataType = 
    			DataTypeInfo.create(
    					reader.getString("data_type"), 
    					reader.getInt("character_maximum_length"),
    					reader.getInt("numeric_precision"),
    					reader.getInt("numeric_precision_radix"),
    					reader.getInt("numeric_scale"));

    	boolean isPrimaryKey = (dataType.getType() == DBDataType.INTEGER || dataType.getType() == DBDataType.TEXT) && !StringUtils.isNullOrEmpty(reader.getString("constraint_type")) && reader.getString("constraint_type").toUpperCase().equals("PRIMARY KEY");
    	return new TableSourceColumnInfo(tableSource, name, dataType, isMandatory, isPrimaryKey, isAutoGenerated);
    }
    
    /**
	 *	Table source that owns the column.
	 */
    public final ITableSourceInfo getTableSource() {
        return _tableSource;
    }
    
    /**
	 *	Table source that owns the column.
	 */
    private final void setTableSource(ITableSourceInfo value) {
        _tableSource = value;
    }
    
    /**
	 *	Name that identifies the column.
	 */
    public final String getName() {
        return _name;
    }
    
    /**
	 *	Name that identifies the column.
	 */
    private final void setName(String value) {
        _name = value;
    }
    
    /**
	 *	Data type of the values stored in the column.
	 */
    public IDataTypeInfo getDataType() {
        return _dataType;
    }
    
    /**
	 *	Data type of the values stored in the column.
	 */
    private void setDataType(IDataTypeInfo value) {
        _dataType = value;
    }
    
    /**
	 *	Returns true if the column must have a value assigned to it (NOT NULL), or false if it is nullable.
	 */
    public final boolean isMandatory() {
        return _isMandatory;
    }
    
    /**
	 *	Returns true if the column must have a value assigned to it (NOT NULL), or false if it is nullable.
	 */
    private final void setIsMandatory(boolean value) {
        _isMandatory = value;
    }
    
    /**
	 *	Returns true if the column is part of the table source's primary key, or false otherwise.
	 */
    public final boolean isPrimaryKey() {
        return _isPrimaryKey;
    }
    
    /**
	 *	Returns true if the column is part of the table source's primary key, or false otherwise.
	 */
    private final void setIsPrimaryKey(boolean value) {
        _isPrimaryKey = value;
    }
    
    /**
	 *	Returns true if the column value is generated automatically when a row is inserted (e.g. sequential numbers).
	 */
    public final boolean isAutoGenerated() {
        return _isAutoGenerated;
    }
    
    /**
	 *	Returns true if the column value is generated automatically when a row is inserted (e.g. sequential numbers).
	 */
    private final void setIsAutoGenerated(boolean value) {
        _isAutoGenerated = value;
    }
}
